/* jvmtest - Testing your VM 
  Copyright (C) 20009, Guenther Wimpassinger

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package jvmtest.tc;

import jvmtest.base.*;

public class TcInstrLdc extends TestCase {
	
	/**
	 * Serialization Version UID 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Getter for the textual name of the TestCase
	 * @return Name of the test case
	 */
	public String getTestCaseName() {
		return "TcInstrLdc";
	}
	
	/**
	 * Write the values of the fields to the Stream. This
	 * may be used to calculate the hash value of the object state 
	 * @param os Stream to write the data into
	 */
	public void writeToStream(ByteArrayOutputStreamEx os) {
		os.writeLong(serialVersionUID);
	}
	
	private boolean run34000(TestCaseResult tcr) {
		long sum = 0;
		
		tcr.calcHashInt(34000);
		sum += 34000;
		tcr.calcHashInt(-34000);
		sum += -34000;
		tcr.calcHashInt(34001);
		sum += 34001;
		tcr.calcHashInt(-34001);
		sum += -34001;
		tcr.calcHashInt(34002);
		sum += 34002;
		tcr.calcHashInt(-34002);
		sum += -34002;
		tcr.calcHashInt(34003);
		sum += 34003;
		tcr.calcHashInt(-34003);
		sum += -34003;
		tcr.calcHashInt(34004);
		sum += 34004;
		tcr.calcHashInt(-34004);
		sum += -34004;
		tcr.calcHashInt(34005);
		sum += 34005;
		tcr.calcHashInt(-34005);
		sum += -34005;
		tcr.calcHashInt(34006);
		sum += 34006;
		tcr.calcHashInt(-34006);
		sum += -34006;
		tcr.calcHashInt(34007);
		sum += 34007;
		tcr.calcHashInt(-34007);
		sum += -34007;
		tcr.calcHashInt(34008);
		sum += 34008;
		tcr.calcHashInt(-34008);
		sum += -34008;
		tcr.calcHashInt(34009);
		sum += 34009;
		tcr.calcHashInt(-34009);
		sum += -34009;
		tcr.calcHashInt(34010);
		sum += 34010;
		tcr.calcHashInt(-34010);
		sum += -34010;
		tcr.calcHashInt(34011);
		sum += 34011;
		tcr.calcHashInt(-34011);
		sum += -34011;
		tcr.calcHashInt(34012);
		sum += 34012;
		tcr.calcHashInt(-34012);
		sum += -34012;
		tcr.calcHashInt(34013);
		sum += 34013;
		tcr.calcHashInt(-34013);
		sum += -34013;
		tcr.calcHashInt(34014);
		sum += 34014;
		tcr.calcHashInt(-34014);
		sum += -34014;
		tcr.calcHashInt(34015);
		sum += 34015;
		tcr.calcHashInt(-34015);
		sum += -34015;
		tcr.calcHashInt(34016);
		sum += 34016;
		tcr.calcHashInt(-34016);
		sum += -34016;
		tcr.calcHashInt(34017);
		sum += 34017;
		tcr.calcHashInt(-34017);
		sum += -34017;
		tcr.calcHashInt(34018);
		sum += 34018;
		tcr.calcHashInt(-34018);
		sum += -34018;
		tcr.calcHashInt(34019);
		sum += 34019;
		tcr.calcHashInt(-34019);
		sum += -34019;
		tcr.calcHashInt(34020);
		sum += 34020;
		tcr.calcHashInt(-34020);
		sum += -34020;
		tcr.calcHashInt(34021);
		sum += 34021;
		tcr.calcHashInt(-34021);
		sum += -34021;
		tcr.calcHashInt(34022);
		sum += 34022;
		tcr.calcHashInt(-34022);
		sum += -34022;
		tcr.calcHashInt(34023);
		sum += 34023;
		tcr.calcHashInt(-34023);
		sum += -34023;
		tcr.calcHashInt(34024);
		sum += 34024;
		tcr.calcHashInt(-34024);
		sum += -34024;
		tcr.calcHashInt(34025);
		sum += 34025;
		tcr.calcHashInt(-34025);
		sum += -34025;
		tcr.calcHashInt(34026);
		sum += 34026;
		tcr.calcHashInt(-34026);
		sum += -34026;
		tcr.calcHashInt(34027);
		sum += 34027;
		tcr.calcHashInt(-34027);
		sum += -34027;
		tcr.calcHashInt(34028);
		sum += 34028;
		tcr.calcHashInt(-34028);
		sum += -34028;
		tcr.calcHashInt(34029);
		sum += 34029;
		tcr.calcHashInt(-34029);
		sum += -34029;
		tcr.calcHashInt(34030);
		sum += 34030;
		tcr.calcHashInt(-34030);
		sum += -34030;
		tcr.calcHashInt(34031);
		sum += 34031;
		tcr.calcHashInt(-34031);
		sum += -34031;
		tcr.calcHashInt(34032);
		sum += 34032;
		tcr.calcHashInt(-34032);
		sum += -34032;
		tcr.calcHashInt(34033);
		sum += 34033;
		tcr.calcHashInt(-34033);
		sum += -34033;
		tcr.calcHashInt(34034);
		sum += 34034;
		tcr.calcHashInt(-34034);
		sum += -34034;
		tcr.calcHashInt(34035);
		sum += 34035;
		tcr.calcHashInt(-34035);
		sum += -34035;
		tcr.calcHashInt(34036);
		sum += 34036;
		tcr.calcHashInt(-34036);
		sum += -34036;
		tcr.calcHashInt(34037);
		sum += 34037;
		tcr.calcHashInt(-34037);
		sum += -34037;
		tcr.calcHashInt(34038);
		sum += 34038;
		tcr.calcHashInt(-34038);
		sum += -34038;
		tcr.calcHashInt(34039);
		sum += 34039;
		tcr.calcHashInt(-34039);
		sum += -34039;
		
		return sum==0;
	}

	private boolean run34040(TestCaseResult tcr) {
		long sum = 0;

		tcr.calcHashInt(34040);
		sum += 34040;
		tcr.calcHashInt(-34040);
		sum += -34040;
		tcr.calcHashInt(34041);
		sum += 34041;
		tcr.calcHashInt(-34041);
		sum += -34041;
		tcr.calcHashInt(34042);
		sum += 34042;
		tcr.calcHashInt(-34042);
		sum += -34042;
		tcr.calcHashInt(34043);
		sum += 34043;
		tcr.calcHashInt(-34043);
		sum += -34043;
		tcr.calcHashInt(34044);
		sum += 34044;
		tcr.calcHashInt(-34044);
		sum += -34044;
		tcr.calcHashInt(34045);
		sum += 34045;
		tcr.calcHashInt(-34045);
		sum += -34045;
		tcr.calcHashInt(34046);
		sum += 34046;
		tcr.calcHashInt(-34046);
		sum += -34046;
		tcr.calcHashInt(34047);
		sum += 34047;
		tcr.calcHashInt(-34047);
		sum += -34047;
		tcr.calcHashInt(34048);
		sum += 34048;
		tcr.calcHashInt(-34048);
		sum += -34048;
		tcr.calcHashInt(34049);
		sum += 34049;
		tcr.calcHashInt(-34049);
		sum += -34049;
		tcr.calcHashInt(34050);
		sum += 34050;
		tcr.calcHashInt(-34050);
		sum += -34050;
		tcr.calcHashInt(34051);
		sum += 34051;
		tcr.calcHashInt(-34051);
		sum += -34051;
		tcr.calcHashInt(34052);
		sum += 34052;
		tcr.calcHashInt(-34052);
		sum += -34052;
		tcr.calcHashInt(34053);
		sum += 34053;
		tcr.calcHashInt(-34053);
		sum += -34053;
		tcr.calcHashInt(34054);
		sum += 34054;
		tcr.calcHashInt(-34054);
		sum += -34054;
		tcr.calcHashInt(34055);
		sum += 34055;
		tcr.calcHashInt(-34055);
		sum += -34055;
		tcr.calcHashInt(34056);
		sum += 34056;
		tcr.calcHashInt(-34056);
		sum += -34056;
		tcr.calcHashInt(34057);
		sum += 34057;
		tcr.calcHashInt(-34057);
		sum += -34057;
		tcr.calcHashInt(34058);
		sum += 34058;
		tcr.calcHashInt(-34058);
		sum += -34058;
		tcr.calcHashInt(34059);
		sum += 34059;
		tcr.calcHashInt(-34059);
		sum += -34059;
		tcr.calcHashInt(34060);
		sum += 34060;
		tcr.calcHashInt(-34060);
		sum += -34060;
		tcr.calcHashInt(34061);
		sum += 34061;
		tcr.calcHashInt(-34061);
		sum += -34061;
		tcr.calcHashInt(34062);
		sum += 34062;
		tcr.calcHashInt(-34062);
		sum += -34062;
		tcr.calcHashInt(34063);
		sum += 34063;
		tcr.calcHashInt(-34063);
		sum += -34063;
		tcr.calcHashInt(34064);
		sum += 34064;
		tcr.calcHashInt(-34064);
		sum += -34064;
		tcr.calcHashInt(34065);
		sum += 34065;
		tcr.calcHashInt(-34065);
		sum += -34065;
		tcr.calcHashInt(34066);
		sum += 34066;
		tcr.calcHashInt(-34066);
		sum += -34066;
		tcr.calcHashInt(34067);
		sum += 34067;
		tcr.calcHashInt(-34067);
		sum += -34067;
		tcr.calcHashInt(34068);
		sum += 34068;
		tcr.calcHashInt(-34068);
		sum += -34068;
		tcr.calcHashInt(34069);
		sum += 34069;
		tcr.calcHashInt(-34069);
		sum += -34069;
		tcr.calcHashInt(34070);
		sum += 34070;
		tcr.calcHashInt(-34070);
		sum += -34070;
		tcr.calcHashInt(34071);
		sum += 34071;
		tcr.calcHashInt(-34071);
		sum += -34071;
		tcr.calcHashInt(34072);
		sum += 34072;
		tcr.calcHashInt(-34072);
		sum += -34072;
		tcr.calcHashInt(34073);
		sum += 34073;
		tcr.calcHashInt(-34073);
		sum += -34073;
		tcr.calcHashInt(34074);
		sum += 34074;
		tcr.calcHashInt(-34074);
		sum += -34074;
		tcr.calcHashInt(34075);
		sum += 34075;
		tcr.calcHashInt(-34075);
		sum += -34075;
		
		return sum==0;
	}
	
	private boolean run34080(TestCaseResult tcr) {
		long sum = 0;
		
		tcr.calcHashInt(34080);
		sum += 34080;
		tcr.calcHashInt(-34080);
		sum += -34080;
		tcr.calcHashInt(34081);
		sum += 34081;
		tcr.calcHashInt(-34081);
		sum += -34081;
		tcr.calcHashInt(34082);
		sum += 34082;
		tcr.calcHashInt(-34082);
		sum += -34082;
		tcr.calcHashInt(34083);
		sum += 34083;
		tcr.calcHashInt(-34083);
		sum += -34083;
		tcr.calcHashInt(34084);
		sum += 34084;
		tcr.calcHashInt(-34084);
		sum += -34084;
		tcr.calcHashInt(34085);
		sum += 34085;
		tcr.calcHashInt(-34085);
		sum += -34085;
		tcr.calcHashInt(34086);
		sum += 34086;
		tcr.calcHashInt(-34086);
		sum += -34086;
		tcr.calcHashInt(34087);
		sum += 34087;
		tcr.calcHashInt(-34087);
		sum += -34087;
		tcr.calcHashInt(34088);
		sum += 34088;
		tcr.calcHashInt(-34088);
		sum += -34088;
		tcr.calcHashInt(34089);
		sum += 34089;
		tcr.calcHashInt(-34089);
		sum += -34089;
		tcr.calcHashInt(34090);
		sum += 34090;
		tcr.calcHashInt(-34090);
		sum += -34090;
		tcr.calcHashInt(34091);
		sum += 34091;
		tcr.calcHashInt(-34091);
		sum += -34091;
		tcr.calcHashInt(34092);
		sum += 34092;
		tcr.calcHashInt(-34092);
		sum += -34092;
		tcr.calcHashInt(34093);
		sum += 34093;
		tcr.calcHashInt(-34093);
		sum += -34093;
		tcr.calcHashInt(34094);
		sum += 34094;
		tcr.calcHashInt(-34094);
		sum += -34094;
		tcr.calcHashInt(34095);
		sum += 34095;
		tcr.calcHashInt(-34095);
		sum += -34095;
		tcr.calcHashInt(34096);
		sum += 34096;
		tcr.calcHashInt(-34096);
		sum += -34096;
		tcr.calcHashInt(34097);
		sum += 34097;
		tcr.calcHashInt(-34097);
		sum += -34097;
		tcr.calcHashInt(34098);
		sum += 34098;
		tcr.calcHashInt(-34098);
		sum += -34098;
		tcr.calcHashInt(34099);
		sum += 34099;
		tcr.calcHashInt(-34099);
		sum += -34099;
		tcr.calcHashInt(34100);
		sum += 34100;
		tcr.calcHashInt(-34100);
		sum += -34100;
		tcr.calcHashInt(34101);
		sum += 34101;
		tcr.calcHashInt(-34101);
		sum += -34101;
		tcr.calcHashInt(34102);
		sum += 34102;
		tcr.calcHashInt(-34102);
		sum += -34102;
		tcr.calcHashInt(34103);
		sum += 34103;
		tcr.calcHashInt(-34103);
		sum += -34103;
		tcr.calcHashInt(34104);
		sum += 34104;
		tcr.calcHashInt(-34104);
		sum += -34104;
		tcr.calcHashInt(34105);
		sum += 34105;
		tcr.calcHashInt(-34105);
		sum += -34105;
		tcr.calcHashInt(34106);
		sum += 34106;
		tcr.calcHashInt(-34106);
		sum += -34106;
		tcr.calcHashInt(34107);
		sum += 34107;
		tcr.calcHashInt(-34107);
		sum += -34107;
		tcr.calcHashInt(34108);
		sum += 34108;
		tcr.calcHashInt(-34108);
		sum += -34108;
		tcr.calcHashInt(34109);
		sum += 34109;
		tcr.calcHashInt(-34109);
		sum += -34109;
		tcr.calcHashInt(34110);
		sum += 34110;
		tcr.calcHashInt(-34110);
		sum += -34110;
		tcr.calcHashInt(34111);
		sum += 34111;
		tcr.calcHashInt(-34111);
		sum += -34111;
		tcr.calcHashInt(34112);
		sum += 34112;
		tcr.calcHashInt(-34112);
		sum += -34112;
		tcr.calcHashInt(34113);
		sum += 34113;
		tcr.calcHashInt(-34113);
		sum += -34113;
		tcr.calcHashInt(34114);
		sum += 34114;
		tcr.calcHashInt(-34114);
		sum += -34114;
		tcr.calcHashInt(34115);
		sum += 34115;
		tcr.calcHashInt(-34115);
		sum += -34115;
		
		return sum == 0;
	}

	private boolean run34120(TestCaseResult tcr) {
		long sum = 0;
		
		tcr.calcHashInt(34120);
		sum += 34120;
		tcr.calcHashInt(-34120);
		sum += -34120;
		tcr.calcHashInt(34121);
		sum += 34121;
		tcr.calcHashInt(-34121);
		sum += -34121;
		tcr.calcHashInt(34122);
		sum += 34122;
		tcr.calcHashInt(-34122);
		sum += -34122;
		tcr.calcHashInt(34123);
		sum += 34123;
		tcr.calcHashInt(-34123);
		sum += -34123;
		tcr.calcHashInt(34124);
		sum += 34124;
		tcr.calcHashInt(-34124);
		sum += -34124;
		tcr.calcHashInt(34125);
		sum += 34125;
		tcr.calcHashInt(-34125);
		sum += -34125;
		tcr.calcHashInt(34126);
		sum += 34126;
		tcr.calcHashInt(-34126);
		sum += -34126;
		tcr.calcHashInt(34127);
		sum += 34127;
		tcr.calcHashInt(-34127);
		sum += -34127;
		tcr.calcHashInt(34128);
		sum += 34128;
		tcr.calcHashInt(-34128);
		sum += -34128;
		tcr.calcHashInt(34129);
		sum += 34129;
		tcr.calcHashInt(-34129);
		sum += -34129;
		tcr.calcHashInt(34130);
		sum += 34130;
		tcr.calcHashInt(-34130);
		sum += -34130;
		tcr.calcHashInt(34131);
		sum += 34131;
		tcr.calcHashInt(-34131);
		sum += -34131;
		tcr.calcHashInt(34132);
		sum += 34132;
		tcr.calcHashInt(-34132);
		sum += -34132;
		tcr.calcHashInt(34133);
		sum += 34133;
		tcr.calcHashInt(-34133);
		sum += -34133;
		tcr.calcHashInt(34134);
		sum += 34134;
		tcr.calcHashInt(-34134);
		sum += -34134;
		tcr.calcHashInt(34135);
		sum += 34135;
		tcr.calcHashInt(-34135);
		sum += -34135;
		tcr.calcHashInt(34136);
		sum += 34136;
		tcr.calcHashInt(-34136);
		sum += -34136;
		tcr.calcHashInt(34137);
		sum += 34137;
		tcr.calcHashInt(-34137);
		sum += -34137;
		tcr.calcHashInt(34138);
		sum += 34138;
		tcr.calcHashInt(-34138);
		sum += -34138;
		tcr.calcHashInt(34139);
		sum += 34139;
		tcr.calcHashInt(-34139);
		sum += -34139;
		tcr.calcHashInt(34140);
		sum += 34140;
		tcr.calcHashInt(-34140);
		sum += -34140;
		tcr.calcHashInt(34141);
		sum += 34141;
		tcr.calcHashInt(-34141);
		sum += -34141;
		tcr.calcHashInt(34142);
		sum += 34142;
		tcr.calcHashInt(-34142);
		sum += -34142;
		tcr.calcHashInt(34143);
		sum += 34143;
		tcr.calcHashInt(-34143);
		sum += -34143;
		tcr.calcHashInt(34144);
		sum += 34144;
		tcr.calcHashInt(-34144);
		sum += -34144;
		tcr.calcHashInt(34145);
		sum += 34145;
		tcr.calcHashInt(-34145);
		sum += -34145;
		tcr.calcHashInt(34146);
		sum += 34146;
		tcr.calcHashInt(-34146);
		sum += -34146;
		tcr.calcHashInt(34147);
		sum += 34147;
		tcr.calcHashInt(-34147);
		sum += -34147;
		tcr.calcHashInt(34148);
		sum += 34148;
		tcr.calcHashInt(-34148);
		sum += -34148;
		tcr.calcHashInt(34149);
		sum += 34149;
		tcr.calcHashInt(-34149);
		sum += -34149;
		tcr.calcHashInt(34150);
		sum += 34150;
		tcr.calcHashInt(-34150);
		sum += -34150;
		tcr.calcHashInt(34151);
		sum += 34151;
		tcr.calcHashInt(-34151);
		sum += -34151;
		tcr.calcHashInt(34152);
		sum += 34152;
		tcr.calcHashInt(-34152);
		sum += -34152;
		tcr.calcHashInt(34153);
		sum += 34153;
		tcr.calcHashInt(-34153);
		sum += -34153;
		tcr.calcHashInt(34154);
		sum += 34154;
		tcr.calcHashInt(-34154);
		sum += -34154;
		tcr.calcHashInt(34155);
		sum += 34155;
		tcr.calcHashInt(-34155);
		sum += -34155;
		
		return sum == 0;
	}
	
	private boolean run34160(TestCaseResult tcr) {
		long sum = 0;
		
		tcr.calcHashInt(34160);
		sum += 34160;
		tcr.calcHashInt(-34160);
		sum += -34160;
		tcr.calcHashInt(34161);
		sum += 34161;
		tcr.calcHashInt(-34161);
		sum += -34161;
		tcr.calcHashInt(34162);
		sum += 34162;
		tcr.calcHashInt(-34162);
		sum += -34162;
		tcr.calcHashInt(34163);
		sum += 34163;
		tcr.calcHashInt(-34163);
		sum += -34163;
		tcr.calcHashInt(34164);
		sum += 34164;
		tcr.calcHashInt(-34164);
		sum += -34164;
		tcr.calcHashInt(34165);
		sum += 34165;
		tcr.calcHashInt(-34165);
		sum += -34165;
		tcr.calcHashInt(34166);
		sum += 34166;
		tcr.calcHashInt(-34166);
		sum += -34166;
		tcr.calcHashInt(34167);
		sum += 34167;
		tcr.calcHashInt(-34167);
		sum += -34167;
		tcr.calcHashInt(34168);
		sum += 34168;
		tcr.calcHashInt(-34168);
		sum += -34168;
		tcr.calcHashInt(34169);
		sum += 34169;
		tcr.calcHashInt(-34169);
		sum += -34169;
		tcr.calcHashInt(34170);
		sum += 34170;
		tcr.calcHashInt(-34170);
		sum += -34170;
		tcr.calcHashInt(34171);
		sum += 34171;
		tcr.calcHashInt(-34171);
		sum += -34171;
		tcr.calcHashInt(34172);
		sum += 34172;
		tcr.calcHashInt(-34172);
		sum += -34172;
		tcr.calcHashInt(34173);
		sum += 34173;
		tcr.calcHashInt(-34173);
		sum += -34173;
		tcr.calcHashInt(34174);
		sum += 34174;
		tcr.calcHashInt(-34174);
		sum += -34174;
		tcr.calcHashInt(34175);
		sum += 34175;
		tcr.calcHashInt(-34175);
		sum += -34175;
		tcr.calcHashInt(34176);
		sum += 34176;
		tcr.calcHashInt(-34176);
		sum += -34176;
		tcr.calcHashInt(34177);
		sum += 34177;
		tcr.calcHashInt(-34177);
		sum += -34177;
		tcr.calcHashInt(34178);
		sum += 34178;
		tcr.calcHashInt(-34178);
		sum += -34178;
		tcr.calcHashInt(34179);
		sum += 34179;
		tcr.calcHashInt(-34179);
		sum += -34179;
		tcr.calcHashInt(34180);
		sum += 34180;
		tcr.calcHashInt(-34180);
		sum += -34180;
		tcr.calcHashInt(34181);
		sum += 34181;
		tcr.calcHashInt(-34181);
		sum += -34181;
		tcr.calcHashInt(34182);
		sum += 34182;
		tcr.calcHashInt(-34182);
		sum += -34182;
		tcr.calcHashInt(34183);
		sum += 34183;
		tcr.calcHashInt(-34183);
		sum += -34183;
		tcr.calcHashInt(34184);
		sum += 34184;
		tcr.calcHashInt(-34184);
		sum += -34184;
		tcr.calcHashInt(34185);
		sum += 34185;
		tcr.calcHashInt(-34185);
		sum += -34185;
		tcr.calcHashInt(34186);
		sum += 34186;
		tcr.calcHashInt(-34186);
		sum += -34186;
		tcr.calcHashInt(34187);
		sum += 34187;
		tcr.calcHashInt(-34187);
		sum += -34187;
		tcr.calcHashInt(34188);
		sum += 34188;
		tcr.calcHashInt(-34188);
		sum += -34188;
		tcr.calcHashInt(34189);
		sum += 34189;
		tcr.calcHashInt(-34189);
		sum += -34189;
		tcr.calcHashInt(34190);
		sum += 34190;
		tcr.calcHashInt(-34190);
		sum += -34190;
		tcr.calcHashInt(34191);
		sum += 34191;
		tcr.calcHashInt(-34191);
		sum += -34191;
		tcr.calcHashInt(34192);
		sum += 34192;
		tcr.calcHashInt(-34192);
		sum += -34192;
		tcr.calcHashInt(34193);
		sum += 34193;
		tcr.calcHashInt(-34193);
		sum += -34193;
		tcr.calcHashInt(34194);
		sum += 34194;
		tcr.calcHashInt(-34194);
		sum += -34194;
		tcr.calcHashInt(34195);
		sum += 34195;
		tcr.calcHashInt(-34195);
		sum += -34195;
		
		return sum == 0;
	}
	
	private boolean run34200(TestCaseResult tcr) {
		long sum = 0;
		
		tcr.calcHashInt(34200);
		sum += 34200;
		tcr.calcHashInt(-34200);
		sum += -34200;
		tcr.calcHashInt(34201);
		sum += 34201;
		tcr.calcHashInt(-34201);
		sum += -34201;
		tcr.calcHashInt(34202);
		sum += 34202;
		tcr.calcHashInt(-34202);
		sum += -34202;
		tcr.calcHashInt(34203);
		sum += 34203;
		tcr.calcHashInt(-34203);
		sum += -34203;
		tcr.calcHashInt(34204);
		sum += 34204;
		tcr.calcHashInt(-34204);
		sum += -34204;
		tcr.calcHashInt(34205);
		sum += 34205;
		tcr.calcHashInt(-34205);
		sum += -34205;
		tcr.calcHashInt(34206);
		sum += 34206;
		tcr.calcHashInt(-34206);
		sum += -34206;
		tcr.calcHashInt(34207);
		sum += 34207;
		tcr.calcHashInt(-34207);
		sum += -34207;
		tcr.calcHashInt(34208);
		sum += 34208;
		tcr.calcHashInt(-34208);
		sum += -34208;
		tcr.calcHashInt(34209);
		sum += 34209;
		tcr.calcHashInt(-34209);
		sum += -34209;
		tcr.calcHashInt(34210);
		sum += 34210;
		tcr.calcHashInt(-34210);
		sum += -34210;
		tcr.calcHashInt(34211);
		sum += 34211;
		tcr.calcHashInt(-34211);
		sum += -34211;
		tcr.calcHashInt(34212);
		sum += 34212;
		tcr.calcHashInt(-34212);
		sum += -34212;
		tcr.calcHashInt(34213);
		sum += 34213;
		tcr.calcHashInt(-34213);
		sum += -34213;
		tcr.calcHashInt(34214);
		sum += 34214;
		tcr.calcHashInt(-34214);
		sum += -34214;
		tcr.calcHashInt(34215);
		sum += 34215;
		tcr.calcHashInt(-34215);
		sum += -34215;
		tcr.calcHashInt(34216);
		sum += 34216;
		tcr.calcHashInt(-34216);
		sum += -34216;
		tcr.calcHashInt(34217);
		sum += 34217;
		tcr.calcHashInt(-34217);
		sum += -34217;
		tcr.calcHashInt(34218);
		sum += 34218;
		tcr.calcHashInt(-34218);
		sum += -34218;
		tcr.calcHashInt(34219);
		sum += 34219;
		tcr.calcHashInt(-34219);
		sum += -34219;
		tcr.calcHashInt(34220);
		sum += 34220;
		tcr.calcHashInt(-34220);
		sum += -34220;
		tcr.calcHashInt(34221);
		sum += 34221;
		tcr.calcHashInt(-34221);
		sum += -34221;
		tcr.calcHashInt(34222);
		sum += 34222;
		tcr.calcHashInt(-34222);
		sum += -34222;
		tcr.calcHashInt(34223);
		sum += 34223;
		tcr.calcHashInt(-34223);
		sum += -34223;
		tcr.calcHashInt(34224);
		sum += 34224;
		tcr.calcHashInt(-34224);
		sum += -34224;
		tcr.calcHashInt(34225);
		sum += 34225;
		tcr.calcHashInt(-34225);
		sum += -34225;
		tcr.calcHashInt(34226);
		sum += 34226;
		tcr.calcHashInt(-34226);
		sum += -34226;
		tcr.calcHashInt(34227);
		sum += 34227;
		tcr.calcHashInt(-34227);
		sum += -34227;
		tcr.calcHashInt(34228);
		sum += 34228;
		tcr.calcHashInt(-34228);
		sum += -34228;
		tcr.calcHashInt(34229);
		sum += 34229;
		tcr.calcHashInt(-34229);
		sum += -34229;
		tcr.calcHashInt(34230);
		sum += 34230;
		tcr.calcHashInt(-34230);
		sum += -34230;
		tcr.calcHashInt(34231);
		sum += 34231;
		tcr.calcHashInt(-34231);
		sum += -34231;
		tcr.calcHashInt(34232);
		sum += 34232;
		tcr.calcHashInt(-34232);
		sum += -34232;
		tcr.calcHashInt(34233);
		sum += 34233;
		tcr.calcHashInt(-34233);
		sum += -34233;
		tcr.calcHashInt(34234);
		sum += 34234;
		tcr.calcHashInt(-34234);
		sum += -34234;
		tcr.calcHashInt(34235);
		sum += 34235;
		tcr.calcHashInt(-34235);
		sum += -34235;

		return sum == 0;
	}
	
	private boolean run34240(TestCaseResult tcr) {
		long sum = 0;
		
		tcr.calcHashInt(34240);
		sum += 34240;
		tcr.calcHashInt(-34240);
		sum += -34240;
		tcr.calcHashInt(34241);
		sum += 34241;
		tcr.calcHashInt(-34241);
		sum += -34241;
		tcr.calcHashInt(34242);
		sum += 34242;
		tcr.calcHashInt(-34242);
		sum += -34242;
		tcr.calcHashInt(34243);
		sum += 34243;
		tcr.calcHashInt(-34243);
		sum += -34243;
		tcr.calcHashInt(34244);
		sum += 34244;
		tcr.calcHashInt(-34244);
		sum += -34244;
		tcr.calcHashInt(34245);
		sum += 34245;
		tcr.calcHashInt(-34245);
		sum += -34245;
		tcr.calcHashInt(34246);
		sum += 34246;
		tcr.calcHashInt(-34246);
		sum += -34246;
		tcr.calcHashInt(34247);
		sum += 34247;
		tcr.calcHashInt(-34247);
		sum += -34247;
		tcr.calcHashInt(34248);
		sum += 34248;
		tcr.calcHashInt(-34248);
		sum += -34248;
		tcr.calcHashInt(34249);
		sum += 34249;
		tcr.calcHashInt(-34249);
		sum += -34249;
		tcr.calcHashInt(34250);
		sum += 34250;
		tcr.calcHashInt(-34250);
		sum += -34250;
		tcr.calcHashInt(34251);
		sum += 34251;
		tcr.calcHashInt(-34251);
		sum += -34251;
		tcr.calcHashInt(34252);
		sum += 34252;
		tcr.calcHashInt(-34252);
		sum += -34252;
		tcr.calcHashInt(34253);
		sum += 34253;
		tcr.calcHashInt(-34253);
		sum += -34253;
		tcr.calcHashInt(34254);
		sum += 34254;
		tcr.calcHashInt(-34254);
		sum += -34254;
		tcr.calcHashInt(34255);
		sum += 34255;
		tcr.calcHashInt(-34255);
		sum += -34255;
		
		return sum == 0;
	}
	
	
	/**
	 * Test case method
	 */
	public TestCaseResult run() {
		boolean Result = true;
		long sum = 0;
		TestCaseResult FResult = TestCaseResultFactory.createResult();
		
		/* at least 256 different constants */
		/* ldc index -- load int constant from pool below 256 */
		/* ldc_w index1,index2 -- load int constant from pool */
		/* ldc2_w index1, index2 -- load long constant from pool */
		FResult.calcHashInt(32768); // use ldc or ldc_w for wide index
		sum += 32768;			    // use ldc2_w for longs with wide index
		FResult.calcHashInt(-32768);
		sum += -32768;
		FResult.calcHashInt(32769);
		sum += 32769;
		FResult.calcHashInt(-32769);
		sum += -32769;
		FResult.calcHashInt(65535);
		sum += 65535;
		FResult.calcHashInt(-65535);
		sum += -65535;
		FResult.calcHashInt(65536);
		sum += 65536;
		FResult.calcHashInt(-65536);
		sum += -65536;
		FResult.calcHashInt(2147483647);
		sum += 2147483647;
		FResult.calcHashInt(-2147483647);
		sum += -2147483647;
		FResult.calcHashInt(-2147483648);
		sum += -2147483648;
		
		Result = 
			(sum == -2147483648L) &&
		    run34000(FResult) &&
		    run34040(FResult) &&
		    run34080(FResult) &&
		    run34120(FResult) &&
		    run34160(FResult) &&
		    run34200(FResult) &&
		    run34240(FResult);
		
		FResult.calcResult(Result, this);
		
		return FResult;
	}
}